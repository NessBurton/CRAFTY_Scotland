<functionalRoles>
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="agroforestry" serialID="0"
		givingUpMean="${@(agents/%v/AftParams_agroforestry.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_agroforestry.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_agroforestry.csv, givingUpProb)}">
		
		<alternativeFr>Agroforestry</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_agroforestry.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_agroforestry.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_agroforestry.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_agroforestry.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_agroforestry.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_agroforestry.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_agroforestry.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="consvnative" serialID="1"
		givingUpMean="${@(agents/%v/AftParams_consvnative.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_consvnative.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_consvnative.csv, givingUpProb)}">
		
		<alternativeFr>Conservationist_Native_Woodland</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_consvnative.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_consvnative.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_consvnative.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_consvnative.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution"  
 		
 			min="${@(agents/%v/AftParams_consvnative.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_consvnative.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_consvnative.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="estateconsv" serialID="2"
		givingUpMean="${@(agents/%v/AftParams_estateconsv.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_estateconsv.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_estateconsv.csv, givingUpProb)}">
		
		<alternativeFr>Conservation Estate</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_estateconsv.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_estateconsv.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_estateconsv.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_estateconsv.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_estateconsv.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_estateconsv.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_estateconsv.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="estatemulti" serialID="3"
		givingUpMean="${@(agents/%v/AftParams_estatemulti.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_estatemulti.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_estatemulti.csv, givingUpProb)}">
		
		<alternativeFr>Traditional_Multifunctional_Estate</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_estatemulti.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_estatemulti.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_estatemulti.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_estatemulti.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_estatemulti.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_estatemulti.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_estatemulti.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="estatesport" serialID="4"
		givingUpMean="${@(agents/%v/AftParams_estatesport.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_estatesport.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_estatesport.csv, givingUpProb)}">
		
		<alternativeFr>Sporting Estate</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_estatesport.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_estatesport.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_estatesport.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_estatesport.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_estatesport.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_estatesport.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_estatesport.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="extarable" serialID="5"
		givingUpMean="${@(agents/%v/AftParams_extarable.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_extarable.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_extarable.csv, givingUpProb)}">
		
		<alternativeFr>Extensive_Arable</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_extarable.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_extarable.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_extarable.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_extarable.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_extarable.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_extarable.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_extarable.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	

	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="extpastoral" serialID="6"
		givingUpMean="${@(agents/%v/AftParams_extpastoral.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_extpastoral.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_extpastoral.csv, givingUpProb)}">
		
		<alternativeFr>Extensive_Pastoral</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_extpastoral.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_extpastoral.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_extpastoral.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_extpastoral.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_extpastoral.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_extpastoral.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_extpastoral.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	

	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="intarable" serialID="7"
		givingUpMean="${@(agents/%v/AftParams_intarable.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_intarable.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_intarable.csv, givingUpProb)}">
		
		<alternativeFr>Intensive_Arable</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_intarable.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_intarable.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_intarable.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_intarable.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_intarable.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_intarable.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_intarable.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	

	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="intpastoral" serialID="8"
		givingUpMean="${@(agents/%v/AftParams_intpastoral.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_intpastoral.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_intpastoral.csv, givingUpProb)}">
		
		<alternativeFr>Intensive_Pastoral</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_intpastoral.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_intpastoral.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_intpastoral.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_intpastoral.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_intpastoral.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_intpastoral.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_intpastoral.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="marginal" serialID="9"
		givingUpMean="${@(agents/%v/AftParams_marginal.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_marginal.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_marginal.csv, givingUpProb)}">
		
		<alternativeFr>Marginal</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_marginal.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_marginal.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_marginal.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_marginal.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_marginal.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_marginal.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_marginal.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	

	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="multimixed" serialID="10"
		givingUpMean="${@(agents/%v/AftParams_multimixed.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_multimixed.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_multimixed.csv, givingUpProb)}">
		
		<alternativeFr>Multifunctional_mixed_woodland</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_multimixed.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_multimixed.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_multimixed.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_multimixed.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_multimixed.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_multimixed.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_multimixed.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	

	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="multinb" serialID="11"
		givingUpMean="${@(agents/%v/AftParams_multinb.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_multinb.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_multinb.csv, givingUpProb)}">
		
		<alternativeFr>Multifunctional_native_broadleaf</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_multinb.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_multinb.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_multinb.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_multinb.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_multinb.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_multinb.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_multinb.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	

	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="multinc" serialID="12"
		givingUpMean="${@(agents/%v/AftParams_multinc.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_multinc.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_multinc.csv, givingUpProb)}">
		
		<alternativeFr>Multifunctional_native_conifer</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_multinc.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_multinc.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_multinc.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_multinc.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_multinc.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_multinc.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_multinc.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	

	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="multinnc" serialID="13"
		givingUpMean="${@(agents/%v/AftParams_multinnc.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_multinnc.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_multinnc.csv, givingUpProb)}">
		
		<alternativeFr>Multifunctional_non-native_conifer</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_multinnc.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_multinnc.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_multinnc.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_multinnc.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_multinnc.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_multinnc.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_multinnc.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	

	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="multinnb" serialID="14"
		givingUpMean="${@(agents/%v/AftParams_multinnb.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_multinnb.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_multinnb.csv, givingUpProb)}">
		
		<alternativeFr>Multifunctional_non-native_broadleaf</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_multinnb.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_multinnb.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_multinnb.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_multinnb.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_multinnb.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_multinnb.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_multinnb.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="prodnbroad" serialID="15"
		givingUpMean="${@(agents/%v/AftParams_prodnbroad.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_prodnbroad.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_prodnbroad.csv, givingUpProb)}">
		
		<alternativeFr>Productive_native_broadleaf</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_prodnbroad.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_prodnbroad.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_prodnbroad.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_prodnbroad.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_prodnbroad.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_prodnbroad.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_prodnbroad.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="prodnconifer" serialID="16"
		givingUpMean="${@(agents/%v/AftParams_prodnconifer.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_prodnconifer.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_prodnconifer.csv, givingUpProb)}">
		
		<alternativeFr>Productive_native_conifer</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_prodnconifer.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_prodnconifer.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_prodnconifer.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_prodnconifer.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_prodnconifer.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_prodnconifer.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_prodnconifer.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="prodnnbroad" serialID="16"
		givingUpMean="${@(agents/%v/AftParams_prodnnbroad.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_prodnnbroad.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_prodnnbroad.csv, givingUpProb)}">
		
		<alternativeFr>Productive_non-native_broadleaf</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_prodnnbroad.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_prodnnbroad.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_prodnnbroad.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_prodnnbroad.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_prodnnbroad.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_prodnnbroad.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_prodnnbroad.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	

  <fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="prodnnconifer" serialID="16"
		givingUpMean="${@(agents/%v/AftParams_prodnnconifer.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_prodnnconifer.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_prodnnconifer.csv, givingUpProb)}">
		
		<alternativeFr>Productive_non-native_conifer</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_prodnnconifer.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_prodnnconifer.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_prodnnconifer.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_prodnnconifer.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_prodnnconifer.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_prodnnconifer.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_prodnnconifer.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="waterurban" serialID="16"
		givingUpMean="${@(agents/%v/AftParams_waterurban.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%v/AftParams_waterurban.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%v/AftParams_waterurban.csv, givingUpProb)}">
		
		<alternativeFr>Waterbody_or_urban</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_waterurban.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_waterurban.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%v/AftParams_waterurban.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%v/AftParams_waterurban.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%v/AftParams_waterurban.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%v/AftParams_waterurban.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%v/AftParams_waterurban.csv, productionCsvFile)}" multiplyProductionNoise="true"/>
	</fRole>


</functionalRoles>